<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              xmlns:app="http://schemas.android.com/apk/res-auto"
              android:orientation="vertical"
              android:layout_width="match_parent"
              android:layout_height="match_parent">
    <com.yanxing.titlebarlibrary.TitleBar
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        app:title_main="@string/bufferknife"/>
    <TextView
        android:id="@+id/textview1"
        style="@style/style_txt"
        android:text="textView1"/>
    <TextView
        android:id="@+id/text_view_test"
        style="@style/style_txt"
        android:text="textView2"/>
    <TextView
        android:id="@+id/textView3"
        style="@style/style_txt"
        android:text="textView3"/>
    <TextView
        android:id="@+id/textView4"
        style="@style/style_txt"
        android:textSize="14sp"
        android:lineSpacingExtra="4dp"
        android:text="androidannotations与ButterKnife使用比较：两者都有View注解、事件绑定，而androidannotations还有线程切换、网络访问等功能；两者都是预编译，比其他采用运行时反射View注解框架性能优些； androidannotations中布局可以通过@EActivity注解写到Activity类上面，而ButterKnife需要自己写代码 setContent或者LayoutInflater加载布局，从而两者的BaseActivity里面的代码量不同，使用ButterKnife子类Activity返回一个布局对象给BaseActivity， 然后写上ButterKnife.bind(this)，所有的子类就不用重复写ButterKnife.bind(this)，而androidannotations不需要这些写这些，一个注解就行了，但是注册和启动 Activity需要给Activity类名加上后缀_;Android studio有ButterKnife插件，可以自动生成View注解和事件绑定，而androidannotations没有此类插件，这点ButterKnife更节省时间。"/>
</LinearLayout>